Use `camp`;

1. Exercise
 
CREATE TABLE `mountains`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL
);
 
CREATE TABLE `peaks`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL,
`mountain_id` INT,
CONSTRAINT `fk_peaks_mountains`
FOREIGN KEY (`mountain_id`)
REFERENCES `mountains`(`id`)
);
 
2. Exercise
 
select `driver_id`, `vehicle_type`, CONCAT_WS(' ', c.`first_name`, c.`last_name`) as 'driver_name'  
from `vehicles` as v
join `campers` as c 
on v.`driver_id` = c.`id`;
 
3. Exercise
 
SELECT `starting_point` AS 'route_starting_point', `end_point` AS 'route_ending_point', `leader_id`, CONCAT_WS(' ', c.`first_name`, c.`last_name`) AS 'leader_name'
FROM `routes` AS r
JOIN `campers` AS c
ON r.`leader_id` = c.`id`;
 
4. Exercise
 
CREATE TABLE `mountains`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL
);
 
CREATE TABLE `peaks`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL,
`mountain_id` INT,
CONSTRAINT `fk_peaks_mountains`
FOREIGN KEY (`mountain_id`)
REFERENCES `mountains`(`id`)
ON DELETE CASCADE
);



-----------------------
SELECT
r.starting_point AS 'route_starting_point',
r.end_point as 'route_ending_point',
r.leader_id,
concat(c.first_name, ' ', c.last_name) as 'leader_name'
FROM
routes AS r
JOIN
campers AS c ON r.leader_id = c.id;